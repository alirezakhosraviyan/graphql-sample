[tool.poetry]
name = "graphql-sample"
version = "0.1.0"
description = "Sample Project for GraphQL"
authors = ["Alireza Khosravian"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.6"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
pydantic = "^2.7.4"
pydantic-settings = "^2.3.3"
alembic = "^1.13.1"
sqlmodel = "^0.0.19"
asyncpg = "^0.30.0"
strawberry-graphql = {extras = ["debug-server"], version = "^0.258.0"}
greenlet = "^3.1.1"
python-multipart = "^0.0.20"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.10"
mypy = "^1.10.0"
pytest = "^8.2.2"
coverage = "^7.5.3"
pytest-asyncio = "^0.25.2"
httpx = "^0.28.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
exclude = ["alembic"]


[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
