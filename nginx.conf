worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream products_service {
        server products-service:8000;  # Matches the service name in docker-compose.yml
    }

    upstream images_service {
        server images-service:8000;  # Matches the service name in docker-compose.yml
    }

    upstream gateway_service {
        server gateway-service:4000;  # Matches the service name in docker-compose.yml
    }

    server {
        listen 80;

        location /products {
            rewrite ^/products(/.*)?$ $1 break;
            proxy_pass http://products_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /images {
            rewrite ^/images(/.*)?$ $1 break;
            proxy_pass http://images_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://gateway_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}